/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// InstanceContentSettings : Types of dynamic user content permitted in an instance
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InstanceContentSettings {
    #[serde(rename = "drones", skip_serializing_if = "Option::is_none")]
    pub drones: Option<bool>,
    #[serde(rename = "emoji", skip_serializing_if = "Option::is_none")]
    pub emoji: Option<bool>,
    #[serde(rename = "pedestals", skip_serializing_if = "Option::is_none")]
    pub pedestals: Option<bool>,
    #[serde(rename = "prints", skip_serializing_if = "Option::is_none")]
    pub prints: Option<bool>,
    #[serde(rename = "stickers", skip_serializing_if = "Option::is_none")]
    pub stickers: Option<bool>,
    #[serde(rename = "props", skip_serializing_if = "Option::is_none")]
    pub props: Option<bool>,
}

impl InstanceContentSettings {
    /// Types of dynamic user content permitted in an instance
    pub fn new() -> InstanceContentSettings {
        InstanceContentSettings {
            drones: None,
            emoji: None,
            pedestals: None,
            prints: None,
            stickers: None,
            props: None,
        }
    }
}
