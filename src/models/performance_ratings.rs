/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PerformanceRatings : Avatar Performance ratings.
/// Avatar Performance ratings.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PerformanceRatings {
    #[serde(rename = "None")]
    None,
    #[serde(rename = "Excellent")]
    Excellent,
    #[serde(rename = "Good")]
    Good,
    #[serde(rename = "Medium")]
    Medium,
    #[serde(rename = "Poor")]
    Poor,
    #[serde(rename = "VeryPoor")]
    VeryPoor,
}

impl std::fmt::Display for PerformanceRatings {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "None"),
            Self::Excellent => write!(f, "Excellent"),
            Self::Good => write!(f, "Good"),
            Self::Medium => write!(f, "Medium"),
            Self::Poor => write!(f, "Poor"),
            Self::VeryPoor => write!(f, "VeryPoor"),
        }
    }
}

impl Default for PerformanceRatings {
    fn default() -> PerformanceRatings {
        Self::None
    }
}
