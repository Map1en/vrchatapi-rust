/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Product {
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(rename = "created")]
    pub created: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "displayName")]
    pub display_name: String,
    #[serde(rename = "groupAccess", skip_serializing_if = "Option::is_none")]
    pub group_access: Option<bool>,
    #[serde(rename = "groupAccessRemove", skip_serializing_if = "Option::is_none")]
    pub group_access_remove: Option<bool>,
    #[serde(rename = "groupId", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<String>,
    #[serde(rename = "groupRoleId", skip_serializing_if = "Option::is_none")]
    pub group_role_id: Option<String>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "imageId")]
    pub image_id: String,
    #[serde(rename = "parentListings")]
    pub parent_listings: Vec<String>,
    #[serde(rename = "productType")]
    pub product_type: models::ProductType,
    #[serde(rename = "sellerDisplayName")]
    pub seller_display_name: String,
    #[serde(rename = "sellerId")]
    pub seller_id: String,
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
    #[serde(rename = "updated", deserialize_with = "Option::deserialize")]
    pub updated: Option<String>,
    #[serde(
        rename = "useForSubscriberList",
        skip_serializing_if = "Option::is_none"
    )]
    pub use_for_subscriber_list: Option<bool>,
}

impl Product {
    pub fn new(
        archived: bool,
        created: String,
        description: String,
        display_name: String,
        id: String,
        image_id: String,
        parent_listings: Vec<String>,
        product_type: models::ProductType,
        seller_display_name: String,
        seller_id: String,
        tags: Vec<String>,
        updated: Option<String>,
    ) -> Product {
        Product {
            archived,
            created,
            description,
            display_name,
            group_access: None,
            group_access_remove: None,
            group_id: None,
            group_role_id: None,
            id,
            image_id,
            parent_listings,
            product_type,
            seller_display_name,
            seller_id,
            tags,
            updated,
            use_for_subscriber_list: None,
        }
    }
}
