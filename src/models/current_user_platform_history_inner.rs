/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CurrentUserPlatformHistoryInner {
    #[serde(rename = "isMobile", skip_serializing_if = "Option::is_none")]
    pub is_mobile: Option<bool>,
    #[serde(
        rename = "platform",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub platform: Option<Option<String>>,
    #[serde(rename = "recorded", skip_serializing_if = "Option::is_none")]
    pub recorded: Option<String>,
}

impl CurrentUserPlatformHistoryInner {
    pub fn new() -> CurrentUserPlatformHistoryInner {
        CurrentUserPlatformHistoryInner {
            is_mobile: None,
            platform: None,
            recorded: None,
        }
    }
}
