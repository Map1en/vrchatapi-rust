/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApiConfigReportCategories : Categories available for reporting objectionable content
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiConfigReportCategories {
    #[serde(rename = "avatar")]
    pub avatar: models::ReportCategory,
    #[serde(rename = "behavior")]
    pub behavior: models::ReportCategory,
    #[serde(rename = "chat")]
    pub chat: models::ReportCategory,
    #[serde(rename = "environment")]
    pub environment: models::ReportCategory,
    #[serde(rename = "groupstore")]
    pub groupstore: models::ReportCategory,
    #[serde(rename = "image")]
    pub image: models::ReportCategory,
    #[serde(rename = "text")]
    pub text: models::ReportCategory,
    #[serde(rename = "warnings")]
    pub warnings: models::ReportCategory,
    #[serde(rename = "worldimage")]
    pub worldimage: models::ReportCategory,
    #[serde(rename = "worldstore")]
    pub worldstore: models::ReportCategory,
}

impl ApiConfigReportCategories {
    /// Categories available for reporting objectionable content
    pub fn new(
        avatar: models::ReportCategory,
        behavior: models::ReportCategory,
        chat: models::ReportCategory,
        environment: models::ReportCategory,
        groupstore: models::ReportCategory,
        image: models::ReportCategory,
        text: models::ReportCategory,
        warnings: models::ReportCategory,
        worldimage: models::ReportCategory,
        worldstore: models::ReportCategory,
    ) -> ApiConfigReportCategories {
        ApiConfigReportCategories {
            avatar,
            behavior,
            chat,
            environment,
            groupstore,
            image,
            text,
            warnings,
            worldimage,
            worldstore,
        }
    }
}
