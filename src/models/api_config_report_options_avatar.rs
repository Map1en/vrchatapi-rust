/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiConfigReportOptionsAvatar {
    #[serde(rename = "avatar", skip_serializing_if = "Option::is_none")]
    pub avatar: Option<Vec<String>>,
    #[serde(rename = "avatarpage", skip_serializing_if = "Option::is_none")]
    pub avatarpage: Option<Vec<String>>,
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<String>>,
}

impl ApiConfigReportOptionsAvatar {
    pub fn new() -> ApiConfigReportOptionsAvatar {
        ApiConfigReportOptionsAvatar {
            avatar: None,
            avatarpage: None,
            warnings: None,
        }
    }
}
