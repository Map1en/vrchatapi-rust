/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiConfigAvatarPerfLimiter {
    #[serde(rename = "AndroidMobile")]
    pub android_mobile: models::PerformanceLimiterInfo,
    #[serde(rename = "PC")]
    pub pc: models::PerformanceLimiterInfo,
    #[serde(rename = "Pico")]
    pub pico: models::PerformanceLimiterInfo,
    #[serde(rename = "Quest")]
    pub quest: models::PerformanceLimiterInfo,
    #[serde(rename = "XRElite")]
    pub xr_elite: models::PerformanceLimiterInfo,
    #[serde(rename = "iOSMobile")]
    pub i_os_mobile: models::PerformanceLimiterInfo,
}

impl ApiConfigAvatarPerfLimiter {
    pub fn new(
        android_mobile: models::PerformanceLimiterInfo,
        pc: models::PerformanceLimiterInfo,
        pico: models::PerformanceLimiterInfo,
        quest: models::PerformanceLimiterInfo,
        xr_elite: models::PerformanceLimiterInfo,
        i_os_mobile: models::PerformanceLimiterInfo,
    ) -> ApiConfigAvatarPerfLimiter {
        ApiConfigAvatarPerfLimiter {
            android_mobile,
            pc,
            pico,
            quest,
            xr_elite,
            i_os_mobile,
        }
    }
}
